<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=windows-1252">
<TITLE>TACSInput Methods</TITLE>
</HEAD>
<BODY>

<H4>TACSInput Methods</H4>
<P><HR></P>
<B><P><A NAME="Flush">procedure</B> Flush; </P>
<P>This is an abstract method. In TACSInput descendands it closes the current input, clearing up all temporary structures alocated during data transfer.</P>
<P>Note: usually this method is called internally by the output or converter component to which the input component is assigned. You can call this method if you want to get direct access to the audio stream. In such a case the sequence of calls should look like this:</P>
<P>InputComponent.Init;<BR>
InputComponent.GetData(...); // in a loop<BR>
InputComponent.Flush;</P>
<P><HR></P>
<P><A NAME="GetData"></P>
<B><P>function </B>GetData(Buffer : Pointer; BufferSize : Integer): Integer;</P>
<P>This is an abstract method. In TACSInput descendands this function reads the audio stream data into the Buffer. Returns the number of bytes actually read. Returns zero at the end of stream.</P>
<P>Note: usually this method is called internally by the output or converter component to which the input component is assigned. You can call this method if you want to get direct access to the audio stream. In such a case the sequence of calls should look like this:</P>
<P>InputComponent.Init;<BR>
InputComponent.GetData(...); // in a loop<BR>
InputComponent.Flush;</P>
<P><HR></P>
<B><P><A NAME="Init">procedure</B> Init;</P>
<P>This is an abstract method. In TACSInput descendands it prepares input component for reading data.</P>
<P>Note: usually this method is called internally by the output or converter component to which the input component is assigned. You can call this method if you want to get direct access to the audio stream. In such a case the sequence of calls should look like this:</P>
<P>InputComponent.Init;<BR>
InputComponent.GetData(...); // in a loop<BR>
InputComponent.Flush;</P>
<P><HR></P>
<B><P><A NAME="Reset">procedure</B> Reset;</P>
<P>Use this procedure to free input component's resourses when an exception occurs. After Reset the input component is once again ready to perform input.</P>
<P><HR></P>
<P><A HREF=TACSInput.htm>TACSInput</A> <A HREF=index.htm>Home</A> <A HREF=ClassList.htm>ACS Classes</A></P>
<P><HR></P>
<P>Copyright © 2002, 2003 Andrei Borovsky. All rights reserved.</P>
</BODY>
</HTML>
